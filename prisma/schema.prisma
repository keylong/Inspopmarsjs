// This is your Prisma schema file for Neon PostgreSQL
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// NextAuth.js required tables
model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  password      String?   // for credentials login
  
  // 业务相关字段（从旧表迁移）
  username      String?   @unique @db.VarChar(30)
  sex           String?   @db.VarChar(20)
  phone         String?   @db.VarChar(20)
  value         Int       @default(0)
  token         String?   @unique @db.VarChar(50)
  buytype       Int       @default(0)
  buydate       DateTime? @db.Date
  downloading   String?   @db.VarChar(200)
  account       Int?
  
  // 时间戳
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  accounts Account[]
  sessions Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

// 应用特定的表（保持旧的结构但适配 PostgreSQL）
model UserSession {
  id        Int    @id @default(autoincrement())
  session   String @unique @db.VarChar(100)
  timestamp Int
  state     Int

  @@map("user_sessions")
}